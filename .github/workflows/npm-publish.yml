# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Node.js Package

on:
  release:
    types: [created]

env:
  node-version: 20
  PNPM_HOME: /home/runner/.local/share/pnpm

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node-version }}
      - name: Configure pnpm path
        run: echo "${{ env.PNPM_HOME }}" >> $GITHUB_PATH
      - name: Setup pnpm with corepack
        run: |
          corepack enable pnpm
          corepack prepare pnpm@latest --activate
          SHELL="$(which bash)" pnpm setup --force
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install node dependencies
        run: pnpm i --frozen-lockfile
      - run: pnpm run build

  npm-publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node-version }}
          registry-url: https://registry.npmjs.org/
      - name: Configure pnpm path
        run: echo "${{ env.PNPM_HOME }}" >> $GITHUB_PATH
      - name: Setup pnpm with corepack
        run: |
          corepack enable pnpm
          corepack prepare pnpm@latest --activate
          SHELL="$(which bash)" pnpm setup --force
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install node dependencies
        run: pnpm i --frozen-lockfile
      - run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
